import argparse
import pickle

import matplotlib.pyplot as plt
import numpy as np


def plot_spectrogram(output, out_path="", begin: int = 0, end: int = -1):
    feat = output["input_feat"][0]
    if feat.shape[1] == 240:
        feat = feat[:, :80]
    feat = feat.T
    align_phone = output["align_phone"]
    t_gt = [int(float(t_1) / 16000 * 100) for (_, t_1, _) in align_phone[:-1]]
    t_cif = [int(t) for t in output["cif_indices"]]
    prob = output["cif_prob"][0]

    plt.figure(figsize=(10, 5))

    ax1 = plt.subplot(2, 1, 1)
    ax2 = plt.subplot(2, 1, 2)

    # ax1.pcolormesh(range(feat.shape[1] + 1), range(feat.shape[0] + 1), feat)
    feat = (feat - feat.min()) / (feat.max() - feat.min())
    feat = 1 - feat
    ax1.pcolormesh(
        range(feat.shape[1] + 1), range(feat.shape[0] + 1), feat, cmap="Greys"
    )

    for t in t_gt:
        ax1.axvline(t, color="r")
    for t in t_cif:
        ax1.axvline(t + 0.5, color="lime")
    ax1.set_xlim(begin, feat.shape[1] if end <= 0 else end)

    ax2.stem(np.arange(feat.shape[1]), prob, markerfmt=" ")
    ax2.set_xlim(begin, feat.shape[1] if end <= 0 else end)
    ax2.set_ylim(0.0, 1.0)

    if out_path != "":
        plt.savefig(out_path, bbox_inches="tight", dpi=150)
    plt.show()


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "file", type=str, help="Path to file generated by get_sample.py"
    )
    parser.add_argument("--out", type=str, default="", help="Directory of output file.")
    parser.add_argument("--begin", type=int, default=0, help="Beginning timestep")
    parser.add_argument("--end", type=int, default=-1, help="Beginning timestep")
    args = parser.parse_args()

    with open(args.file, "rb") as fp:
        output = pickle.load(fp)

    plot_spectrogram(output, args.out, args.begin, args.end)


if __name__ == "__main__":
    main()
